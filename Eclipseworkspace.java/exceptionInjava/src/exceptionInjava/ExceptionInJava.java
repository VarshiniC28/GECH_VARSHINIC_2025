package exceptionInjava;

import java.io.FileNotFoundException;
import java.io.PrintWriter;

public class ExceptionInJava {

    // Recursion - function calling itself
    public static void display() {
        display(); // ‚ùå Leads to StackOverflowError
    }

    public static void main(String[] args) throws FileNotFoundException {
        /*
         * ‚ùå Exception in Java:
         * => An unwanted or unexpected event that disrupts the normal program flow.
         * => Whenever an exception occurs, normal execution stops.
         * 
         * üõë 2 Types of Exceptions:
         * 1Ô∏è‚É£ Checked Exception (Compile-Time) ‚úÖ Must be handled using try-catch or throws
         *    - Example: FileNotFoundException, IOException
         * 2Ô∏è‚É£ Unchecked Exception (Runtime) ‚ùå Program crashes if not handled
         *    - Example: ArrayIndexOutOfBoundsException, NullPointerException
         * 
         * üèóÔ∏è Exception Handling Mechanisms:
         * ‚úî try ‚Üí Code that may cause an exception.
         * ‚úî catch ‚Üí Handles the exception.
         * ‚úî finally ‚Üí Always runs (even if an exception occurs).
         * ‚úî throws ‚Üí Declares exceptions in method signature.
         * 
         * ‚ùó ERROR vs EXCEPTION:
         * - ERROR = System-level issue (Cannot be handled) üö®
         * - EXCEPTION = Program-level issue (Can be handled) ‚ö†Ô∏è
         */

        // üö® Example of ERROR: StackOverflowError (Unrecoverable, cannot be handled)
//        ExceptionInJava.display(); // ‚ùå Causes infinite recursion & crashes program

        // ‚úÖ Example of Checked Exception (Handled with throws)
        PrintWriter printWriter = new PrintWriter("abc.txt"); // Compiler forces handling
        printWriter.println("Hello WORLD!");
        System.out.println("File written successfully! ‚úçÔ∏è");
        printWriter.close();

        // ‚úÖ Example of Checked Exception (Handled with try-catch)
        try {
            PrintWriter writer = new PrintWriter("abc.txt"); // Risky code
            writer.println("Hello from try-catch!");
            System.out.println("File written in try-catch! ‚úÖ");
            writer.close();
        } catch (FileNotFoundException e) { // Specific exception handling
            System.out.println("‚ö†Ô∏è File not found! Handling exception...");
            e.printStackTrace();
        }

        // ‚úÖ Example of Unchecked Exception (Runtime Error)
        try {
            int arr[] = {1, 2, 3};
            System.out.println(arr[5]); // ‚ùå Throws ArrayIndexOutOfBoundsException
        } catch (ArrayIndexOutOfBoundsException e) {
            System.out.println("‚ö†Ô∏è Array index is out of bounds! Exception handled.");
        }

        // ‚úÖ Example of Finally Block (Always Executes)
        try {
            System.out.println("Inside try block");
        } catch (Exception e) {
            System.out.println("Exception caught!");
        } finally {
            System.out.println("‚úÖ Finally block executed!");
        }
    }
}
